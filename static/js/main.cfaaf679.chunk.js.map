{"version":3,"sources":["api/users.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","UserInfo","user","className","href","TodoInfo","todo","usersFromServer","find","cn","TodoList","todos","map","App","useState","setTitle","selectedUserId","setSelectedUserId","todosFromServer","currentTodos","setCurrentTodos","isEmpty","setIsEmpty","isUserSelected","setIsUserSelected","action","method","onSubmit","event","preventDefault","todosId","newTodo","Math","max","addTodo","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cfaaf679.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import { User } from '../../types';\n\ninterface UserInfoProps {\n  user: User,\n}\n\nexport const UserInfo: React.FC<UserInfoProps> = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import cn from 'classnames';\nimport { UserInfo } from '../UserInfo';\nimport usersFromServer from '../../api/users';\nimport { User, Todo } from '../../types';\n\nfunction getUserById(userId: number): User | null {\n  return usersFromServer.find(user => user.id === userId) || null;\n}\n\ninterface TodoInfoProps {\n  todo: Todo\n}\n\nexport const TodoInfo: React.FC<TodoInfoProps> = ({ todo }) => {\n  const user = getUserById(todo.userId);\n\n  return (\n    <article\n      data-id={todo.id}\n      className={cn('TodoInfo', { 'TodoInfo--completed': todo.completed })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n\n      {user && (\n        <UserInfo\n          user={user}\n        />\n      )}\n    </article>\n  );\n};\n","import { TodoInfo } from '../TodoInfo/TodoInfo';\nimport { Todo } from '../../types';\n\ninterface Todos {\n  todos: Todo[],\n}\n\nexport const TodoList: React.FC<Todos> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo\n        todo={todo}\n        key={todo.id}\n      />\n    ))}\n  </section>\n);\n","import { useState } from 'react';\nimport cn from 'classnames';\n\nimport './App.scss';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './types';\n\nexport const App = () => {\n  const [title, setTitle] = useState('');\n  const [selectedUserId, setSelectedUserId] = useState(0);\n  const [currentTodos, setCurrentTodos] = useState(todosFromServer);\n  const [isEmpty, setIsEmpty] = useState(true);\n  const [isUserSelected, setIsUserSelected] = useState(true);\n\n  const reset = () => {\n    setTitle('');\n    setSelectedUserId(0);\n  };\n\n  const addTodo = () => {\n    const todosId: number[] = currentTodos.map(todo => todo.id);\n\n    const newTodo: Todo = {\n      title,\n      userId: selectedUserId,\n      completed: false,\n      id: Math.max(...todosId) + 1,\n    };\n\n    setCurrentTodos([...currentTodos, newTodo]);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (!title) {\n      setIsEmpty(false);\n    }\n\n    if (!selectedUserId) {\n      setIsUserSelected(false);\n    }\n\n    if (!title || !selectedUserId) {\n      return;\n    }\n\n    addTodo();\n    reset();\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          Title:\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter title...\"\n            value={title}\n            onChange={event => {\n              setTitle(event.target.value);\n\n              if (!event.target.value) {\n                setIsEmpty(false);\n              } else {\n                setIsEmpty(true);\n              }\n            }}\n          />\n          <span\n            className={cn('error', { disabled: isEmpty })}\n          >\n            Please enter a title\n          </span>\n        </div>\n\n        <div className=\"field\">\n          User:\n          <select\n            data-cy=\"userSelect\"\n            onChange={event => {\n              setSelectedUserId(+event.target.value);\n\n              if (event.target.value) {\n                setIsUserSelected(true);\n              }\n            }}\n            value={selectedUserId}\n          >\n            <option value={0} disabled>Choose a user</option>\n            {usersFromServer.map(user => (\n              <option\n                value={user.id}\n                key={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          <span\n            className={cn('error', { disabled: isUserSelected })}\n          >\n            Please choose a user\n          </span>\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={currentTodos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}